{"version":3,"sources":["styles/common/Container/Container.ts","constants/routes.ts","components/Header/components/HeaderLogo/styles.ts","components/Header/components/HeaderLogo/HeaderLogo.tsx","hooks/useAppDispatch.ts","hooks/useAppSelector.ts","store/reducers/theme.slice.ts","components/Header/components/HeaderThemeSwitcher/styles.ts","components/Header/components/HeaderThemeSwitcher/HeaderThemeSwitcher.tsx","components/Header/styles.ts","components/Header/Header.tsx","components/CountryPage/CountryAdditionalDescription/styles.ts","components/CountryPage/CountryAdditionalDescription/CountryAdditionalDescription.tsx","constants/api.ts","utils/network.ts","services/api/countries.ts","components/Loader/styles.ts","components/Loader/Loader.tsx","components/CountryPage/CountryBorderCountries/styles.ts","components/CountryPage/CountryBorderCountries/CountryBorderCountries.tsx","components/CountryPage/CountryButtonBack/styles.ts","components/CountryPage/CountryButtonBack/CountryButtonBack.tsx","components/CountryPage/CountryMainDescription/styles.ts","components/CountryPage/CountryMainDescription/CountryMainDescription.tsx","components/ErrorMessage/styles.ts","components/ErrorMessage/ErrorMessage.tsx","containers/CountryPage/styles.ts","components/HomePage/HomeCountriesList/styles.ts","components/HomePage/HomeCountriesList/HomeCountriesList.tsx","components/HomePage/HomeRegionSelector/HomeRegionSelector.ts","components/HomePage/HomeSearchInput/styles.ts","components/HomePage/HomeSearchInput/HomeSearchInput.tsx","containers/HomePage/styles.ts","containers/NotFoundPage/img/not-found-dark.png","containers/NotFoundPage/img/not-found-light.png","containers/NotFoundPage/styles.ts","router/routerConfiig.ts","containers/HomePage/HomePage.tsx","services/helpers/getFilteredAndSortedCountries.ts","containers/CountryPage/CountryPage.tsx","containers/NotFoundPage/NotFoundPage.tsx","containers/App/styles.ts","containers/App/App.tsx","utils/localStorage.ts","store/store.ts","index.tsx"],"names":["Container","styled","div","COUNTRY_PAGE_ROUTE","Title","Link","attrs","to","HeaderLogo","useAppDispatch","useDispatch","useAppSelector","useSelector","themeSlice","createSlice","name","initialState","theme","isReady","reducers","setTheme","state","action","payload","toggleTheme","actions","themeReducer","reducer","ThemeSwitcher","HeaderThemeSwitcher","dispatch","onClick","size","HeaderEl","header","Wrapper","Header","List","ul","ListItem","li","CountryAdditionalDescription","topLevelDomain","currencies","languages","map","d","c","code","l","COUNTRIES_URI","getCountryUrl","countriesApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getCountries","query","url","providesTags","getCountry","getBorders","borders","codes","join","Loader","Country","span","CountryLink","props","ErrorMessageText","p","CountryBorderCountries","useGetBordersQuery","countries","data","isLoading","isError","length","country","Button","button","CountryButtonBack","history","useHistory","goBack","CountryMainDescription","nativeName","population","region","subregion","capital","Text","ErrorMessage","section","InfoImage","img","InfoTitle","h1","Description","CardList","CardWrapper","article","CardLink","CardImage","CardBody","CardTitle","h3","CardInfoList","CardInfoListItem","HomeCountriesList","png","flags","src","alt","toLocaleString","HomeRegionSelector","Select","styles","control","provided","backgroundColor","color","borderRadius","padding","border","boxShadow","height","option","cursor","isSelected","InputContainer","label","Input","input","type","placeholder","SearchIcon","IoSearch","HomeSearchInput","memo","searchValue","onChangeSearchInputValue","value","onChange","ControlsWrapper","Image","NotFoundPageLink","publicRoutes","path","component","useGetCountriesQuery","useState","searchInputValue","setSearchInputValue","regionSelectValue","setRegionSelectValue","options","useMemo","handleChangeSearchInputValue","useCallback","e","currentTarget","filteredAndSortedCountries","search","regionName","filter","includes","toLowerCase","getFilteredAndSortedCountries","isSearchable","isClearable","exact","useParams","useGetCountryQuery","flag","pathname","useLocation","notFoundImageLight","notFoundImageDark","main","App","useEffect","themeFromLocalStorage","key","localStorage","getItem","JSON","parse","getLocalStorage","document","body","setAttribute","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","concat","subscribe","getState","setItem","stringify","node","getElementById","render"],"mappings":"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","file":"static/js/main.4dc85ef0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1240px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n`;\r\n","const HOME_PAGE_ROUTE = '/';\r\n\r\nconst COUNTRY_PAGE_ROUTE = '/country';\r\n\r\nexport { COUNTRY_PAGE_ROUTE, HOME_PAGE_ROUTE };\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { HOME_PAGE_ROUTE } from '../../../../constants/routes';\r\n\r\nconst Title = styled(Link).attrs({\r\n  to: `${HOME_PAGE_ROUTE}`,\r\n})`\r\n  color: var(--colors-text);\r\n  font-size: var(--fs-sm);\r\n  font-weight: var(--fw-bold);\r\n  text-decoration: none;\r\n`;\r\n\r\nexport default { Title };\r\n","import styles from './styles';\r\n\r\nexport const HeaderLogo: React.FC = () => (\r\n  <styles.Title>Where is the World?</styles.Title>\r\n);\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AppDispatch } from '../store/store';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store/store';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type ThemeSliceState = {\r\n  theme: null | ThemeTypes;\r\n  isReady: boolean;\r\n};\r\n\r\nconst initialState: ThemeSliceState = {\r\n  theme: null,\r\n  isReady: false,\r\n};\r\n\r\nconst themeSlice = createSlice({\r\n  name: 'theme',\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state, action: PayloadAction<ThemeTypes>) => {\r\n      state.theme = action.payload;\r\n      state.isReady = true;\r\n    },\r\n    toggleTheme: (state, action: PayloadAction<ThemeTypes>) => {\r\n      state.theme = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTheme, toggleTheme } = themeSlice.actions;\r\nexport const themeReducer = themeSlice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nconst ThemeSwitcher = styled.div`\r\n  display: flex;\r\n  column-gap: 10px;\r\n\r\n  color: var(--colors-text);\r\n  font-size: var(--fs-sm);\r\n  font-weight: var(--fw-bold);\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default { ThemeSwitcher };\r\n","import { IoMoon, IoMoonOutline } from 'react-icons/io5';\r\n\r\nimport { useAppDispatch } from '../../../../hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector';\r\nimport { toggleTheme } from '../../../../store/reducers/theme.slice';\r\nimport styles from './styles';\r\n\r\nexport const HeaderThemeSwitcher: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { theme } = useAppSelector(({ themeReducer }) => themeReducer);\r\n\r\n  const handleToggleTheme = (): void => {\r\n    dispatch(toggleTheme(theme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <styles.ThemeSwitcher onClick={handleToggleTheme}>\r\n      {theme === 'light' ? (\r\n        <IoMoonOutline size=\"14px\" />\r\n      ) : (\r\n        <IoMoon size=\"14px\" />\r\n      )}\r\n      {theme} Theme\r\n    </styles.ThemeSwitcher>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst HeaderEl = styled.header`\r\n  box-shadow: var(--shadow);\r\n  background-color: var(--colors-ui-base);\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 2rem 0;\r\n`;\r\n\r\nexport default { HeaderEl, Wrapper };\r\n","import { Container } from '../../styles/common/Container';\r\nimport { HeaderLogo } from './components/HeaderLogo';\r\nimport { HeaderThemeSwitcher } from './components/HeaderThemeSwitcher';\r\nimport styles from './styles';\r\n\r\nexport const Header: React.FC = () => (\r\n  <styles.HeaderEl>\r\n    <Container>\r\n      <styles.Wrapper>\r\n        <HeaderLogo />\r\n        <HeaderThemeSwitcher />\r\n      </styles.Wrapper>\r\n    </Container>\r\n  </styles.HeaderEl>\r\n);\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  line-height: 1.8;\r\n\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n`;\r\n\r\nexport default { List, ListItem };\r\n","import styles from './styles';\r\n\r\ninterface ICountryAdditionalDescriptionProps {\r\n  topLevelDomain: string[];\r\n  currencies: ICurrency[];\r\n  languages: ILanguage[];\r\n}\r\n\r\nexport const CountryAdditionalDescription: React.FC<ICountryAdditionalDescriptionProps> =\r\n  ({ topLevelDomain, currencies, languages }) => {\r\n    return (\r\n      <styles.List>\r\n        <styles.ListItem>\r\n          <b>Top Level Domain</b>{' '}\r\n          {topLevelDomain.map((d) => (\r\n            <span key={d}>{d}</span>\r\n          ))}\r\n        </styles.ListItem>\r\n        <styles.ListItem>\r\n          <b>Currency</b>{' '}\r\n          {currencies.map((c) => (\r\n            <span key={c.code}>{c.name} </span>\r\n          ))}\r\n        </styles.ListItem>\r\n        <styles.ListItem>\r\n          <b>Languages</b>{' '}\r\n          {languages.map((l) => (\r\n            <span key={l.name}>{l.name}</span>\r\n          ))}\r\n        </styles.ListItem>\r\n      </styles.List>\r\n    );\r\n  };\r\n","const BASE_URL = 'https://restcountries.com/v2';\r\n\r\nconst REQUIRED_FIELDS_FOR_COUNTRIES =\r\n  'fields=name,capital,flags,population,region';\r\n\r\nconst COUNTRIES_URI = `all?${REQUIRED_FIELDS_FOR_COUNTRIES}`;\r\n\r\nconst REQUIRED_FIELDS_FOR_COUNTRY =\r\n  'fields=name,nativeName,flag,capital,population,region,subregion,topLevelDomain,currencies,languages,borders';\r\n\r\nconst COUNTRY_URI = `name`;\r\n\r\nexport { BASE_URL, COUNTRIES_URI, COUNTRY_URI, REQUIRED_FIELDS_FOR_COUNTRY };\r\n","import { COUNTRY_URI, REQUIRED_FIELDS_FOR_COUNTRY } from '../constants/api';\r\n\r\nconst getCountryUrl = (name: string): string =>\r\n  `${COUNTRY_URI}/${name}?${REQUIRED_FIELDS_FOR_COUNTRY}`;\r\n\r\nconst getCountryByCode = (codes: string[]): string => {\r\n  return `alpha?codes=${codes.join(',')}&fields=name`;\r\n};\r\n\r\nexport { getCountryByCode, getCountryUrl };\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nimport { BASE_URL, COUNTRIES_URI } from '../../constants/api';\r\nimport { getCountryByCode, getCountryUrl } from '../../utils/network';\r\n\r\nexport const countriesApi = createApi({\r\n  reducerPath: 'countriesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: BASE_URL }),\r\n  tagTypes: ['Countries', 'Country', 'Borders'],\r\n  endpoints: (build) => ({\r\n    getCountries: build.query<ICountryBase[], void>({\r\n      query: () => ({\r\n        url: `/${COUNTRIES_URI}`,\r\n      }),\r\n      providesTags: ['Countries'],\r\n    }),\r\n    getCountry: build.query<[IExtendedCountry], string>({\r\n      query: (name) => ({\r\n        url: `/${getCountryUrl(name)}`,\r\n      }),\r\n      providesTags: ['Country'],\r\n    }),\r\n    getBorders: build.query<{ name: string }[], string[]>({\r\n      query: (borders) => ({\r\n        url: `/${getCountryByCode(borders)}`,\r\n      }),\r\n      providesTags: ['Borders'],\r\n    }),\r\n  }),\r\n});\r\n","import styled from 'styled-components';\r\n\r\nconst Loader = styled.div`\r\n  display: block;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  border: 3px solid var(--colors-loader);\r\n  border-top-color: var(--colors-ui-base);\r\n  animation: 0.5s spin infinite linear;\r\n  display: flex;\r\n  margin: auto;\r\n\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @media (min-width: 767px) {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default { Loader };\r\n","import styles from './styles';\r\n\r\nexport const Loader: React.FC = () => {\r\n  return <styles.Loader />;\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { COUNTRY_PAGE_ROUTE } from '../../../constants/routes';\r\n\r\nconst Container = styled.div`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Country = styled.span`\r\n  padding: 0 1rem;\r\n  background-color: var(--colors-ui-base);\r\n  box-shadow: var(--shadow);\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CountryLink = styled(Link).attrs<{ to: string }>((props) => ({\r\n  to: `${COUNTRY_PAGE_ROUTE}/${props.to}`,\r\n}))`\r\n  color: inherit;\r\n`;\r\n\r\nconst ErrorMessageText = styled.p`\r\n  width: 600px;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  line-height: 1.7;\r\n  color: var(--colors-text);\r\n  font-size: var(--fz-md);\r\n  font-weight: var(--fw-normal);\r\n  text-align: center;\r\n  text-shadow: var(--shadow);\r\n\r\n  -webkit-text-stroke-color: var(--colors-text);\r\n  -webkit-text-stroke-width: 0.5px;\r\n  -webkit-text-stroke-color: transparent;\r\n`;\r\n\r\nexport default {\r\n  Container,\r\n  Wrapper,\r\n  Country,\r\n  ErrorMessageText,\r\n  CountryLink,\r\n};\r\n","import { countriesApi } from '../../../services/api/countries';\r\nimport { Loader } from '../../Loader';\r\nimport styles from './styles';\r\n\r\ninterface ICountryBorderCountriesProps {\r\n  borders: string[];\r\n}\r\n\r\nexport const CountryBorderCountries: React.FC<ICountryBorderCountriesProps> = ({\r\n  borders,\r\n}) => {\r\n  const {\r\n    data: countries,\r\n    isLoading,\r\n    isError,\r\n  } = countriesApi.useGetBordersQuery(borders);\r\n\r\n  if (isError && borders.length) {\r\n    return (\r\n      <styles.Container>\r\n        <styles.ErrorMessageText>\r\n          We cannot display border countries :(\r\n        </styles.ErrorMessageText>\r\n      </styles.Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <styles.Container>\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : !countries ? (\r\n          <span>There is no border countries</span>\r\n        ) : (\r\n          <styles.Wrapper>\r\n            {countries?.map((country) => (\r\n              <styles.Country key={country.name}>\r\n                <styles.CountryLink to={country.name}>\r\n                  {country.name}\r\n                </styles.CountryLink>\r\n              </styles.Country>\r\n            ))}\r\n          </styles.Wrapper>\r\n        )}\r\n      </styles.Container>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  padding: 0 1rem;\r\n  background-color: var(--colors-ui-base);\r\n  box-shadow: var(--shadow);\r\n  line-height: 2.5;\r\n  border-radius: var(--radii);\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n\r\n  color: var(--colors-text);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default { Button };\r\n","import { IoArrowBack } from 'react-icons/io5';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport styles from './styles';\r\n\r\nexport const CountryButtonBack: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const handleGoBack = (): void => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <styles.Button onClick={handleGoBack}>\r\n      <IoArrowBack /> Back\r\n    </styles.Button>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  line-height: 1.8;\r\n\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n`;\r\n\r\nexport default { List, ListItem };\r\n","import styles from './styles';\r\n\r\ninterface ICountryMainDescriptionProps {\r\n  nativeName: string;\r\n  population: string;\r\n  region: string;\r\n  subregion: string;\r\n  capital: string;\r\n}\r\n\r\nexport const CountryMainDescription: React.FC<ICountryMainDescriptionProps> = ({\r\n  nativeName,\r\n  population,\r\n  region,\r\n  subregion,\r\n  capital,\r\n}) => {\r\n  return (\r\n    <styles.List>\r\n      <styles.ListItem>\r\n        <b>Native name: </b> {nativeName}\r\n      </styles.ListItem>\r\n      <styles.ListItem>\r\n        <b>Population: </b> {population}\r\n      </styles.ListItem>\r\n      <styles.ListItem>\r\n        <b>Region: </b> {region}\r\n      </styles.ListItem>\r\n      <styles.ListItem>\r\n        <b>Sub Region: </b> {subregion}\r\n      </styles.ListItem>\r\n      <styles.ListItem>\r\n        <b>Capital: </b> {capital}\r\n      </styles.ListItem>\r\n    </styles.List>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst Text = styled.p`\r\n  width: 600px;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  line-height: 1.7;\r\n  color: var(--colors-text);\r\n  font-size: var(--fz-md);\r\n  font-weight: var(--fw-normal);\r\n  text-align: center;\r\n  text-shadow: var(--shadow);\r\n\r\n  -webkit-text-stroke-color: var(--colors-text);\r\n  -webkit-text-stroke-width: 0.5px;\r\n  -webkit-text-stroke-color: transparent;\r\n`;\r\n\r\nexport default { Text };\r\n","import styles from './styles';\r\n\r\nexport const ErrorMessage: React.FC = () => {\r\n  return (\r\n    <styles.Text>\r\n      O-o-ops! Something went wrong\r\n      <br />\r\n      We cannot display data.\r\n      <br />\r\n      Come back when we fix everything\r\n    </styles.Text>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.section`\r\n  margin-top: 3rem;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  gap: 2rem;\r\n\r\n  @media (min-width: 767px) {\r\n    grid-template-columns: minmax(100px, 400px) 1fr;\r\n    align-items: center;\r\n    gap: 5rem;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    grid-template-columns: minmax(400px, 600px) 1fr;\r\n  }\r\n`;\r\n\r\nconst InfoImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst InfoTitle = styled.h1`\r\n  margin: 0;\r\n  font-weight: var(--fw-normal);\r\n`;\r\n\r\nconst Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n\r\n  @media (min-width: 1024px) {\r\n    flex-direction: row;\r\n    gap: 4rem;\r\n  }\r\n`;\r\n\r\nexport default {\r\n  Wrapper,\r\n  InfoImage,\r\n  InfoTitle,\r\n  Description,\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { COUNTRY_PAGE_ROUTE } from '../../../constants/routes';\r\n\r\nexport const CardList = styled.section`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 1fr);\r\n  gap: 2rem;\r\n\r\n  @media (min-width: 767px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 3rem;\r\n\r\n    padding: 2.5rem 0;\r\n  }\r\n  @media (min-width: 1024px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 4rem;\r\n  }\r\n`;\r\n\r\nconst CardWrapper = styled.article`\r\n  border-radius: var(--radii);\r\n  background-color: var(--colors-ui-base);\r\n  box-shadow: var(--shadow);\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst CardLink = styled(Link).attrs<{ to: string }>((props) => ({\r\n  to: `${COUNTRY_PAGE_ROUTE}/${props.to}`,\r\n}))`\r\n  text-decoration: none;\r\n  color: var(--colors-text);\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n  height: 150px;\r\n  width: 100%;\r\n  object-fit: contain;\r\n  object-position: center;\r\n  box-shadow: var(--shadow);\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n  padding: 1rem 1.5rem 2rem;\r\n`;\r\n\r\nconst CardTitle = styled.h3`\r\n  font-size: var(--fs-sm);\r\n  font-weight: var(--fw-bold);\r\n`;\r\n\r\nconst CardInfoList = styled.ul`\r\n  list-style: none;\r\n  padding: 1rem 0 0;\r\n`;\r\n\r\nconst CardInfoListItem = styled.li`\r\n  font-size: var(--fs-sm);\r\n  line-height: 1.5;\r\n  font-weight: var(--fw-light);\r\n\r\n  & > b {\r\n    font-weight: var(--fw-bold);\r\n  }\r\n`;\r\n\r\nexport default {\r\n  CardList,\r\n  CardWrapper,\r\n  CardLink,\r\n  CardImage,\r\n  CardBody,\r\n  CardTitle,\r\n  CardInfoList,\r\n  CardInfoListItem,\r\n};\r\n","import styles from './styles';\r\n\r\ninterface IHomeCountriesListProps {\r\n  countries: ICountryBase[] | null;\r\n}\r\n\r\nexport const HomeCountriesList: React.FC<IHomeCountriesListProps> = ({\r\n  countries,\r\n}) => {\r\n  return (\r\n    <styles.CardList>\r\n      {countries &&\r\n        countries.map(\r\n          ({ name, flags: { png }, population, region, capital }) => (\r\n            <styles.CardWrapper key={name}>\r\n              <styles.CardLink to={name}>\r\n                <styles.CardImage src={png} alt={`Flag of ${name}`} />\r\n                <styles.CardBody>\r\n                  <styles.CardTitle>{name}</styles.CardTitle>\r\n                  <styles.CardInfoList>\r\n                    <styles.CardInfoListItem>\r\n                      <b>Population: </b> {population.toLocaleString()}\r\n                    </styles.CardInfoListItem>\r\n                    <styles.CardInfoListItem>\r\n                      <b>Region: </b> {region}\r\n                    </styles.CardInfoListItem>\r\n                    <styles.CardInfoListItem>\r\n                      <b>Capital: </b> {capital}\r\n                    </styles.CardInfoListItem>\r\n                  </styles.CardInfoList>\r\n                </styles.CardBody>\r\n              </styles.CardLink>\r\n            </styles.CardWrapper>\r\n          )\r\n        )}\r\n    </styles.CardList>\r\n  );\r\n};\r\n","import Select from 'react-select';\r\nimport styled from 'styled-components';\r\n\r\nexport const HomeRegionSelector = styled(Select).attrs({\r\n  styles: {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      backgroundColor: 'var(--colors-ui-base)',\r\n      color: 'var(--colors-text)',\r\n      borderRadius: 'var(--radii)',\r\n      padding: '0.25rem',\r\n      border: 'none',\r\n      boxShadow: 'var(--shadow)',\r\n      height: '50px',\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      cursor: 'pointer',\r\n      color: 'var(--colors-text)',\r\n      backgroundColor: state.isSelected\r\n        ? 'var(--colors-bg)'\r\n        : 'var(--colors-ui-base)',\r\n    }),\r\n  },\r\n})`\r\n  width: 200px;\r\n  border-radius: var(--radii);\r\n  font-family: var(--family);\r\n  border: none;\r\n\r\n  & > * {\r\n    box-shadow: var(--shadow);\r\n  }\r\n\r\n  & input {\r\n    padding-left: 0.25rem;\r\n  }\r\n\r\n  & * {\r\n    color: var(--colors-text) !important;\r\n  }\r\n\r\n  & > div[id] {\r\n    background-color: var(--colors-ui-base);\r\n  }\r\n`;\r\n","import { IoSearch } from 'react-icons/io5';\r\nimport styled from 'styled-components';\r\n\r\nconst InputContainer = styled.label`\r\n  background-color: var(--colors-ui-base);\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  border-radius: var(--radii);\r\n  box-shadow: var(--shadow);\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n\r\n  @media (min-width: 767px) {\r\n    margin-bottom: 0;\r\n    width: 280px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input.attrs({\r\n  type: 'search',\r\n  placeholder: 'Search for a country...',\r\n})`\r\n  margin-left: 2rem;\r\n  border: none;\r\n  outline: none;\r\n  color: var(--colors-text);\r\n\r\n  background-color: var(--colors-ui-base);\r\n`;\r\n\r\nconst SearchIcon = styled(IoSearch)`\r\n  width: 16px;\r\n  height: 16px;\r\n  position: absolute;\r\n  object-fit: cover;\r\n  object-position: center;\r\n`;\r\n\r\nexport default {\r\n  InputContainer,\r\n  Input,\r\n  SearchIcon,\r\n};\r\n","import { memo } from 'react';\r\n\r\nimport styles from './styles';\r\n\r\ninterface IHomeSearchInputProps {\r\n  searchValue: string;\r\n  onChangeSearchInputValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const HomeSearchInput: React.FC<IHomeSearchInputProps> = memo(\r\n  ({ searchValue, onChangeSearchInputValue }) => (\r\n    <styles.InputContainer>\r\n      <styles.SearchIcon />\r\n      <styles.Input value={searchValue} onChange={onChangeSearchInputValue} />\r\n    </styles.InputContainer>\r\n  )\r\n);\r\n","import styled from 'styled-components';\r\n\r\nconst ControlsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport default { ControlsWrapper };\r\n","export default __webpack_public_path__ + \"static/media/not-found-dark.ca2f4275.png\";","export default __webpack_public_path__ + \"static/media/not-found-light.438399ab.png\";","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { HOME_PAGE_ROUTE } from '../../constants/routes';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: var(--fz-sm);\r\n  font-weight: var(--fw-normal);\r\n  color: var(--colors-text);\r\n  line-height: 1.7;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 300px;\r\n  object-fit: contain;\r\n  object-position: center center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst NotFoundPageLink = styled(Link).attrs({\r\n  to: `${HOME_PAGE_ROUTE}`,\r\n})`\r\n  color: inherit;\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport default { Text, Image, Wrapper, NotFoundPageLink };\r\n","import { COUNTRY_PAGE_ROUTE, HOME_PAGE_ROUTE } from '../constants/routes';\r\nimport { CountryPage } from '../containers/CountryPage/CountryPage';\r\nimport { HomePage } from '../containers/HomePage';\r\nimport { NotFoundPage } from '../containers/NotFoundPage';\r\n\r\nexport const publicRoutes = [\r\n  { path: HOME_PAGE_ROUTE, component: HomePage, exact: true },\r\n  { path: `${COUNTRY_PAGE_ROUTE}/:name`, component: CountryPage, exact: true },\r\n  { path: '*', component: NotFoundPage, exact: true },\r\n];\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { ErrorMessage } from '../../components/ErrorMessage';\r\nimport { HomeCountriesList } from '../../components/HomePage/HomeCountriesList';\r\nimport { HomeRegionSelector } from '../../components/HomePage/HomeRegionSelector';\r\nimport { HomeSearchInput } from '../../components/HomePage/HomeSearchInput';\r\nimport { Loader } from '../../components/Loader';\r\nimport { countriesApi } from '../../services/api/countries';\r\nimport { getFilteredAndSortedCountries } from '../../services/helpers/getFilteredAndSortedCountries';\r\nimport styles from './styles';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const {\r\n    data: countries,\r\n    isLoading,\r\n    isError,\r\n  } = countriesApi.useGetCountriesQuery();\r\n  const [searchInputValue, setSearchInputValue] = useState<string>('');\r\n  const [regionSelectValue, setRegionSelectValue] =\r\n    useState<null | IReactSelectValue>(null);\r\n\r\n  const options = useMemo(\r\n    () => [\r\n      { value: 'Africa', label: 'Africa' },\r\n      { value: 'America', label: 'America' },\r\n      { value: 'Asia', label: 'Asia' },\r\n      { value: 'Europe', label: 'Europe' },\r\n      { value: 'Oceania', label: 'Oceania' },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleChangeSearchInputValue = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n      setSearchInputValue(e.currentTarget.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleChangeRegionSelectValue = (event: IReactSelectValue): void => {\r\n    setRegionSelectValue(event);\r\n  };\r\n\r\n  const filteredAndSortedCountries = getFilteredAndSortedCountries(\r\n    countries,\r\n    searchInputValue,\r\n    regionSelectValue\r\n  );\r\n\r\n  if (isError) {\r\n    return <ErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <styles.ControlsWrapper>\r\n            <HomeSearchInput\r\n              searchValue={searchInputValue}\r\n              onChangeSearchInputValue={handleChangeSearchInputValue}\r\n            />\r\n            <HomeRegionSelector\r\n              options={options}\r\n              placeholder=\"Filter by Region\"\r\n              value={regionSelectValue}\r\n              onChange={(e) =>\r\n                handleChangeRegionSelectValue(e as IReactSelectValue)\r\n              }\r\n              isSearchable={false}\r\n              isClearable\r\n            />\r\n          </styles.ControlsWrapper>\r\n          <HomeCountriesList countries={filteredAndSortedCountries} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const getFilteredAndSortedCountries = (\r\n  countries: ICountryBase[] | undefined,\r\n  search: string,\r\n  region: IReactSelectValue | null\r\n): ICountryBase[] | null => {\r\n  if (!countries) return null;\r\n\r\n  let data = [...countries];\r\n\r\n  if (region) {\r\n    const { value: regionName } = region;\r\n\r\n    data = data.filter((country) => country.region.includes(regionName));\r\n  }\r\n\r\n  if (search) {\r\n    data = data.filter((country) =>\r\n      country.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n","import { useParams } from 'react-router';\r\n\r\nimport { CountryAdditionalDescription } from '../../components/CountryPage/CountryAdditionalDescription';\r\nimport { CountryBorderCountries } from '../../components/CountryPage/CountryBorderCountries';\r\nimport { CountryButtonBack } from '../../components/CountryPage/CountryButtonBack';\r\nimport { CountryMainDescription } from '../../components/CountryPage/CountryMainDescription';\r\nimport { ErrorMessage } from '../../components/ErrorMessage';\r\nimport { Loader } from '../../components/Loader';\r\nimport { countriesApi } from '../../services/api/countries';\r\nimport styles from './styles';\r\n\r\nexport const CountryPage: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const { data, isLoading, isError } = countriesApi.useGetCountryQuery(name);\r\n\r\n  const country = data?.[0];\r\n\r\n  if (isError) {\r\n    return <ErrorMessage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <CountryButtonBack />\r\n          {country && (\r\n            <styles.Wrapper>\r\n              <styles.InfoImage src={country.flag} alt={`Flag of ${name}`} />\r\n\r\n              <div>\r\n                <styles.InfoTitle>{name}</styles.InfoTitle>\r\n                <styles.Description>\r\n                  <CountryMainDescription\r\n                    nativeName={country.nativeName}\r\n                    population={country.population.toLocaleString()}\r\n                    region={country.region}\r\n                    subregion={country.subregion}\r\n                    capital={country.capital}\r\n                  />\r\n                  <CountryAdditionalDescription\r\n                    topLevelDomain={country.topLevelDomain}\r\n                    currencies={country.currencies}\r\n                    languages={country.languages}\r\n                  />\r\n                </styles.Description>\r\n                <CountryBorderCountries borders={country.borders} />\r\n              </div>\r\n            </styles.Wrapper>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useLocation } from 'react-router-dom';\r\n\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport notFoundImageDark from './img/not-found-dark.png';\r\nimport notFoundImageLight from './img/not-found-light.png';\r\nimport styles from './styles';\r\n\r\nexport const NotFoundPage: React.FC = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  const { theme } = useAppSelector(({ themeReducer }) => themeReducer);\r\n\r\n  return (\r\n    <styles.Wrapper>\r\n      <styles.Image\r\n        src={theme === 'light' ? notFoundImageLight : notFoundImageDark}\r\n        alt=\"Not Found\"\r\n      />\r\n      <styles.Text>\r\n        No match for <u>{pathname}</u>\r\n        <br />\r\n        <styles.NotFoundPageLink>\r\n          <u>Return to home page</u>\r\n        </styles.NotFoundPageLink>\r\n      </styles.Text>\r\n    </styles.Wrapper>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.main`\r\n  padding: 2rem 0;\r\n\r\n  @media (min-width: 767px) {\r\n    padding: 4rem 0;\r\n  }\r\n`;\r\n\r\nexport default { Wrapper };\r\n","import { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { Header } from '../../components/Header';\r\nimport { useAppDispatch } from '../../hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../hooks/useAppSelector';\r\nimport { publicRoutes } from '../../router/routerConfiig';\r\nimport { setTheme } from '../../store/reducers/theme.slice';\r\nimport { Container } from '../../styles/common/Container';\r\nimport { getLocalStorage } from '../../utils/localStorage';\r\nimport styles from './styles';\r\n\r\nexport const App: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { isReady, theme } = useAppSelector(({ themeReducer }) => themeReducer);\r\n\r\n  useEffect(() => {\r\n    const themeFromLocalStorage = getLocalStorage<ThemeTypes>('theme');\r\n\r\n    if (themeFromLocalStorage) {\r\n      dispatch(setTheme(themeFromLocalStorage));\r\n    } else {\r\n      dispatch(setTheme('light'));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (theme) {\r\n      document.body.setAttribute('data-theme', theme);\r\n    }\r\n  }, [theme]);\r\n\r\n  if (!isReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <styles.Wrapper>\r\n        <Container>\r\n          <Switch>\r\n            {publicRoutes.map(({ path, component, exact }) => (\r\n              <Route\r\n                key={path}\r\n                path={path}\r\n                component={component}\r\n                exact={exact}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </Container>\r\n      </styles.Wrapper>\r\n    </>\r\n  );\r\n};\r\n","export const getLocalStorage = <T>(key: string): T | null => {\r\n  const data = localStorage.getItem(key);\r\n\r\n  if (data !== null) {\r\n    return JSON.parse(data) as T;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const setLocalStorage = <T>(key: string, data: T): void => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { countriesApi } from '../services/api/countries';\r\nimport { setLocalStorage } from '../utils/localStorage';\r\nimport { themeReducer } from './reducers/theme.slice';\r\n\r\nconst rootReducer = combineReducers({\r\n  themeReducer,\r\n  [countriesApi.reducerPath]: countriesApi.reducer,\r\n});\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\nconst setupStore = () => {\r\n  return configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware().concat(countriesApi.middleware),\r\n  });\r\n};\r\n\r\nconst store = setupStore();\r\n\r\nstore.subscribe(() => {\r\n  setLocalStorage<ThemeTypes | null>(\r\n    'theme',\r\n    store.getState().themeReducer.theme\r\n  );\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppStore = ReturnType<typeof setupStore>;\r\nexport type AppDispatch = AppStore['dispatch'];\r\n\r\nexport { store };\r\n","import '@hi9mi/normalize-css/index.min.css';\nimport './styles/index.css';\n\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './containers/App';\nimport { store } from './store/store';\n\nconst node = document.getElementById('root');\n\nrender(\n  <StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </StrictMode>,\n  node\n);\n"],"sourceRoot":""}